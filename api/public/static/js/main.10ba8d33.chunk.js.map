{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Button","props","onMouseDown","onClick","className","active","children","App","useState","demo","setDemo","console","log","style","backgroundColor","alt","src","process","REACT_APP_HOSTED_ON","title","width","height","frameBorder","scrolling","allowFullScreen","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qLAEMA,EAAS,SAACC,GACd,OACE,qBACEC,YAAaD,EAAME,QACnBC,UAAS,qIAAgIH,EAAMI,OAAN,4GAF3I,SAQGJ,EAAMK,YAgDEC,MA3Cf,WACE,MAAwBC,mBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAIA,OAFAC,QAAQC,IAAIH,GAGV,sBAAKL,UAAU,yBAAf,UACE,sBAAKA,UAAU,qEAAqES,MAAO,CAAEC,gBAAiB,WAA9G,UACE,qBAAKC,IAAI,OAAOC,IAAI,WAAWZ,UAAU,kBACzC,mBAAGA,UAAU,OAAb,oNAKA,sBAAKA,UAAU,4CAAf,UACE,cAAC,EAAD,CAAQD,QAAS,kBAAMO,EAAQ,IAAIL,OAAiB,IAATI,EAA3C,oBACA,cAAC,EAAD,CAAQN,QAAS,kBAAMO,EAAQ,IAAIL,OAAiB,IAATI,EAA3C,qBACA,cAAC,EAAD,CAAQN,QAAS,kBAAMO,EAAQ,IAAIL,OAAiB,IAATI,EAA3C,6BACA,cAAC,EAAD,CAAQN,QAAS,kBAAMO,EAAQ,IAAIL,OAAiB,IAATI,EAA3C,qBACA,cAAC,EAAD,CAAQN,QAAS,kBAAMO,EAAQ,IAAIL,OAAiB,IAATI,EAA3C,oBAEF,sBAAKL,UAAU,sEAAf,UACE,sBAAKA,UAAU,4DAAf,UACG,CAAC,MAAO,MAAO,OAAQ,OAAQ,QAAQK,GACpCQ,mIAAYC,oBAAqB,CAAC,oBAAqB,MAAO,OAAQ,OAAQ,QAAQT,MAH9F,aAQF,wBACEU,MAAM,OACNC,MAAM,MACNC,OAAO,OACPL,IAAI,kFACJM,YAAY,IACZC,UAAU,KACVC,iBAAe,EACfpB,UAAU,+CC1CHqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.10ba8d33.chunk.js","sourcesContent":["import { useState } from 'react';\n\nconst Button = (props) => {\n  return (\n    <div\n      onMouseDown={props.onClick}\n      className={`text-center select-none cursor-pointer border-white bg-black p-2 border-2 rounded-lg transform transition-all duration-200 ${props.active ?\n        `border-b-2 translate-y-0.5 text-white` :\n        `border-b-4 text-gray-200 hover:border-b-8 hover:-translate-y-0.5`\n        }`\n      }\n    >\n      {props.children}\n    </div>\n  )\n}\n\nfunction App() {\n  const [demo, setDemo] = useState(0);\n\n  console.log(demo);\n\n  return (\n    <div className=\"absolute w-full h-full\">\n      <div className=\"absolute flex flex-col w-1/2 left-0 top-0 bottom-0 p-16 text-black\" style={{ backgroundColor: '#fe8f02' }}>\n        <img alt=\"Logo\" src=\"logo.png\" className=\"max-w-sm mb-8\" />\n        <p className=\"mb-8\">\n          Who needs Cloud Functions or Zapier when you have Miro?\n          All API examples below are generated live from the Miro board to the right.\n          Feel free to call the endpoints manually or check the demos below!\n        </p>\n        <div className=\"grid gap-2 grid-flow-col items-start mb-4\">\n          <Button onClick={() => setDemo(0)} active={demo === 0}>Lookup</Button>\n          <Button onClick={() => setDemo(1)} active={demo === 1}>Quoting</Button>\n          <Button onClick={() => setDemo(2)} active={demo === 2}>Miro API (Meta)</Button>\n          <Button onClick={() => setDemo(3)} active={demo === 3}>Webhook</Button>\n          <Button onClick={() => setDemo(4)} active={demo === 4}>Bug</Button>\n        </div>\n        <div className=\"bg-white rounded-xl flex-grow border-2 border-black overflow-hidden\">\n          <div className=\"h-10 bg-black text-white font-mono flex items-center px-4\">\n            {['GET', 'GET', 'POST', 'POST', 'POST'][demo]}\n            { }{process.env.REACT_APP_HOSTED_ON}{['/api/subscription', 'GET', 'POST', 'POST', 'POST'][demo]}\n          </div>\n          Test\n        </div>\n      </div>\n      <iframe\n        title=\"Miro\"\n        width=\"50%\"\n        height=\"100%\"\n        src=\"https://miro.com/app/live-embed/o9J_lhnGlIk=/?moveToViewport=-615,-326,1228,651\"\n        frameBorder=\"0\"\n        scrolling=\"no\"\n        allowFullScreen\n        className=\"absolute w-1/2 left-1/2 top-0 bottom-0\">\n      </iframe>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}